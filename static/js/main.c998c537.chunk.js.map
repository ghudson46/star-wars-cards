{"version":3,"sources":["Services/characters.js","components/Card/Card.js","pages/AllCharacters.js","components/Card/CardPDF.js","pages/SearchForm.js","pages/Home.js","components/Navbar/Navbar.js","App.js","index.js"],"names":["getAllCharacters","url","a","Promise","resolve","reject","fetch","then","res","json","data","getCharacter","Card","character","class","src","image","alt","name","className","species","homeworld","masters","AllCharacters","useState","starWarsData","setStarWarsData","loading","setLoading","initialUrl","useEffect","response","loadingCharacters","fetchData","all","map","id","characterRecord","_starWarsData","style","display","flexDirection","flexWrap","i","ref","React","createRef","CardPDF","targetRef","filename","toPdf","onClick","backgroundColor","borderRadius","color","fontWeight","marginTop","marginBottom","border","cursor","padding","SearchForm","searchValue","setSearchValue","characterToDisplay","setCharacterToDisplay","alignItems","htmlFor","fontSize","width","height","type","value","onChange","event","target","preventDefault","trim","toLowerCase","Home","Navbar","justifyContent","margin","to","textDecoration","App","exact","path","component","allCharacters","searchFrom","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c998c537.chunk.js","sourcesContent":["export async function getAllCharacters(url) {\n    return new Promise((resolve, reject) => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => {\n                resolve(data);\n            })\n    })\n}\n\nexport async function getCharacter(url) {\n    return new Promise((resolve, reject) => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => {\n                resolve(data);\n            });\n    })\n}\n\n","import React from 'react';\nimport './Card.css';\n\n\nfunction Card({ character }) {\n\n    return (\n        <div class=\"flip-card\">\n            <div class=\"flip-card-inner\">\n                <div class=\"flip-card-front\">\n                    <img src={character.image} alt={character.name} />\n                    <div className=\"overlay\"><h1 className=\"front-text\">{character.name}</h1></div>\n                </div>\n                <div class=\"flip-card-back\">\n                    <h1>{character.name}</h1>\n                    <h2>{character.species}</h2>\n                    <h2>{character.homeworld}</h2>\n                    {character.masters && (\n                        <>\n                            <p>{character.name} was trained by {character.masters[0]}</p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React, { useEffect, useState } from 'react';\n\nimport { getAllCharacters, getCharacter } from '../Services/characters';\nimport Card from '../components/Card/Card.js';\n\nfunction AllCharacters() {\n    const [starWarsData, setStarWarsData] = useState([]);\n\n    const [loading, setLoading] = useState(true);\n    const initialUrl = 'https://akabab.github.io/starwars-api/api';\n\n    useEffect(() => {\n        async function fetchData() {\n          let response = await getAllCharacters(initialUrl + '/all.json');\n          let character = await loadingCharacters(response);\n          setLoading(false);\n        }\n        fetchData();\n      }, []);\n    \n      const loadingCharacters = async data => {\n        let _starWarsData = await Promise.all(data.map(async character => {\n          let characterRecord = await getCharacter(initialUrl + '/id/' + character.id + '.json');\n          return characterRecord;\n        }))\n        setStarWarsData(_starWarsData);\n      }\n\n      return (\n        <div>\n          { loading ? <h1>Loading...</h1> \n          : (\n            <>\n              <div className=\"grid-container\" style={{display: 'flex', flexDirection: 'row', flexWrap: 'wrap'}}>\n                {starWarsData.map((character, i) => {\n                  return <Card key={i} character={character} />\n                })}\n              </div>\n            </>\n          )}\n        </div>\n      );\n\n}\n\nexport default AllCharacters;","import React from 'react';\nimport './Card.css';\n\nimport ReactToPdf from 'react-to-pdf';\n\nconst ref = React.createRef();\n\n\n\nfunction CardPDF({ character }) {\n\n\n    return (\n        \n        <div class=\"flip-card\">\n            <ReactToPdf targetRef={ref} filename=\"SWcard.pdf\">\n                        {({ toPdf }) => (\n                            <button onClick={toPdf} style={{backgroundColor: '#f9d71c', borderRadius: '5px', color: 'black', fontWeight: '800', marginTop: '2rem', marginBottom: '1rem', border: '1px solid black', cursor: 'pointer', padding: '.5rem'}}>Export as PDF</button>\n                        )}\n                </ReactToPdf>\n            <div class=\"flip-card-inner\">\n            <div />\n                <div>\n                   \n                    <div class=\"flip-card-front\" ref={ref}>\n                    <img src={character.image} alt={character.name} />\n                    <div className=\"overlay\"><h1 className=\"front-text\">{character.name}</h1></div>\n                </div>\n                </div>\n                <div class=\"flip-card-back\">\n                    <h1>{character.name}</h1>\n                    <h2>{character.species}</h2>\n                    <h2>{character.homeworld}</h2>\n                    {character.masters && (\n                        <>\n                            <p>{character.name} was trained by {character.masters}</p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CardPDF;","import React, { useState, useEffect } from 'react';\n\nimport { getCharacter, getAllCharacters } from '../Services/characters';\n\nimport CardPDF from '../components/Card/CardPDF';\n\nfunction SearchForm() {\n    const [searchValue, setSearchValue] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [starWarsData, setStarWarsData] = useState([]);\n    const [characterToDisplay, setCharacterToDisplay] = useState('');\n\n    const initialUrl = 'https://akabab.github.io/starwars-api/api';\n\n    useEffect(() => {\n        async function fetchData() {\n          let response = await getAllCharacters(initialUrl + '/all.json');\n          let character = await loadingCharacters(response);\n          setLoading(false);\n        }\n        fetchData();\n    }, []);\n\n    const loadingCharacters = async data => {\n        let _starWarsData = await Promise.all(data.map(async character => {\n          let characterRecord = await getCharacter(initialUrl + '/id/' + character.id + '.json');\n          return characterRecord;\n        }))\n        setStarWarsData(_starWarsData);\n      }\n\n    function handleChange(event) {\n        setCharacterToDisplay('');\n        setSearchValue(event.target.value);\n    }\n\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setCharacterToDisplay(searchValue.trim().toLowerCase());\n        setSearchValue('');\n    }\n\n\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '3rem'}}>\n            <label htmlFor='search' style={{color: '#f9d71c', fontSize: '1.5rem', fontWeight: '600', marginBottom: '1rem'}}>Search for a character by name</label>\n            <input style={{width: '60%', alignItems: 'center', height: '2rem', borderRadius: '5px'}} type='text' value={searchValue} onChange={handleChange} />\n            <button style={{backgroundColor: '#f9d71c', borderRadius: '5px', color: 'black', fontWeight: '800', marginTop: '2rem', border: '1px solid black', cursor: 'pointer', padding: '.5rem'}} onClick={handleSubmit}>SEARCH</button>\n            {starWarsData.map((character, i) => {\n            if (character.name.trim().toLowerCase() === characterToDisplay) {\n                return <CardPDF key={i} character={character} />\n            }\n              return null;\n            })}\n        </div>\n    )\n}\n\nexport default SearchForm;","import React from 'react';\n\nimport './Home.css';\n\nfunction Home() {\n    \n    return (\n        <div className='star-wars'>\n            <h6>A long time ago, in a galaxy far far away....</h6>\n        </div>\n        \n    )\n}\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Navbar';\n\nfunction Navbar() {\n    return(\n        <div style={{alignItems: 'center', display: 'flex', justifyContent: 'space-around', margin: '0 10rem 0 10rem'}}>\n            <Link to='/'><img src='https://icons-for-free.com/iconfiles/png/512/r2d2+robot+starwars+icon-1320166698566079188.png' alt='BB8' style={{height: '8rem', width: '8rem'}} /><p style={{color: 'white', fontWeight: '800', textDecoration: 'none' }}>HOME</p></Link>\n            <Link to='/search'><img src='https://img.icons8.com/plasticine/2x/stormtrooper.png' alt='storm trooper' style={{height: '8rem', width: '8rem'}} /><p style={{color: 'white', fontWeight: '800', textDecoration: 'none' }}>SEARCH</p></Link>\n            <Link to='/all'><img src='https://cdn4.iconfinder.com/data/icons/movies-2-ultra-color/60/073_-_X_Wing-512.png' alt='X wing' style={{height: '8rem', width: '8rem'}} /><p style={{color: 'white', fontWeight: '800', textDecoration: 'none' }}>ALL</p></Link>\n        </div>\n    )\n}\n\nexport default Navbar","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\n\nimport allCharacters from './pages/AllCharacters';\nimport searchFrom from './pages/SearchForm';\nimport Home from './pages/Home';\n\nimport Navbar from './components/Navbar/Navbar';\n\n\nfunction App() {\n  \n\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <img src='https://i.pinimg.com/originals/2f/48/54/2f4854e80863db8219a256c7a35bd034.png' alt='star wars logo' style={{alignItems: 'center', width: '50%', height: '30%', margin: '3rem 0'}} />\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Home}/>\n          <Route path='/all' component={allCharacters}/>\n          <Route path='/search' component={searchFrom}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}